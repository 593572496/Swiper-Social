import os
import sys
import random
import django

# 设置环境
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, BASE_DIR)  # 将当前目录的路径插入到sys path中
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'swiper.settings')
django.setup()

# 姓和名都用这一个字典
dict_name = {0: '赵', 1: '钱', 2: '孙', 3: '李', 4: '周', 5: '吴', 6: '郑', 7: '王', 8: '冯', 9: '陈', 10: '褚', 11: '卫', 12: '蒋',
             13: '沈', 14: '韩', 15: '杨', 16: '朱', 17: '秦', 18: '尤', 19: '许', 20: '何', 21: '吕', 22: '施', 23: '张',
             24: '孔', 25: '曹', 26: '严', 27: '华', 28: '金', 29: '魏', 30: '陶', 31: '姜', 32: '戚', 33: '谢', 34: '邹',
             35: '喻', 36: '柏', 37: '水', 38: '窦', 39: '章', 40: '云', 41: '苏', 42: '潘', 43: '葛', 44: '奚', 45: '范',
             46: '彭', 47: '郎', 48: '鲁', 49: '韦', 50: '昌', 51: '马', 52: '苗', 53: '凤', 54: '花', 55: '方', 56: '俞',
             57: '任', 58: '袁', 59: '柳', 60: '酆', 61: '鲍', 62: '史', 63: '唐', 64: '费', 65: '廉', 66: '岑', 67: '薛',
             68: '雷', 69: '贺', 70: '倪', 71: '汤', 72: '滕', 73: '殷', 74: '罗', 75: '毕', 76: '郝', 77: '邬', 78: '安',
             79: '常', 80: '乐', 81: '于', 82: '时', 83: '傅', 84: '皮', 85: '卞', 86: '齐', 87: '康', 88: '伍', 89: '余',
             90: '元', 91: '卜', 92: '顾', 93: '孟', 94: '平', 95: '黄', 96: '和', 97: '穆', 98: '萧', 99: '尹', 100: '姚',
             101: '邵', 102: '湛', 103: '汪', 104: '祁', 105: '毛', 106: '禹', 107: '狄', 108: '米', 109: '贝', 110: '明',
             111: '臧', 112: '计', 113: '伏', 114: '成', 115: '戴', 116: '谈', 117: '宋', 118: '茅', 119: '庞', 120: '熊',
             121: '纪', 122: '舒', 123: '屈', 124: '项', 125: '祝', 126: '董', 127: '梁', 128: '杜', 129: '阮', 130: '蓝',
             131: '闵', 132: '席', 133: '季', 134: '麻', 135: '强', 136: '贾', 137: '路', 138: '娄', 139: '危', 140: '江',
             141: '童', 142: '颜', 143: '郭', 144: '梅', 145: '盛', 146: '林', 147: '刁', 148: '钟', 149: '徐', 150: '邱',
             151: '骆', 152: '高', 153: '夏', 154: '蔡', 155: '田', 156: '樊', 157: '胡', 158: '凌', 159: '霍', 160: '虞',
             161: '万', 162: '支', 163: '柯', 164: '昝', 165: '管', 166: '卢', 167: '莫', 168: '经', 169: '房', 170: '裘',
             171: '缪', 172: '干', 173: '解', 174: '应', 175: '宗', 176: '丁', 177: '宣', 178: '贲', 179: '邓', 180: '郁',
             181: '单', 182: '杭', 183: '洪', 184: '包', 185: '诸', 186: '左', 187: '石', 188: '崔', 189: '吉', 190: '钮',
             191: '龚', 192: '程', 193: '嵇', 194: '邢', 195: '滑', 196: '裴', 197: '陆', 198: '荣', 199: '翁', 200: '荀',
             201: '羊', 202: '於', 203: '惠', 204: '甄', 205: '曲', 206: '家', 207: '封', 208: '芮', 209: '羿', 210: '储',
             211: '靳', 212: '汲', 213: '邴', 214: '糜', 215: '松', 216: '井', 217: '段', 218: '富', 219: '巫', 220: '乌',
             221: '焦', 222: '巴', 223: '弓', 224: '牧', 225: '隗', 226: '山', 227: '谷', 228: '车', 229: '侯', 230: '宓',
             231: '蓬', 232: '全', 233: '郗', 234: '班', 235: '仰', 236: '秋', 237: '仲', 238: '伊', 239: '宫', 240: '宁',
             241: '仇', 242: '栾', 243: '暴', 244: '甘', 245: '钭', 246: '厉', 247: '戎', 248: '祖', 249: '武', 250: '符',
             251: '刘', 252: '景', 253: '詹', 254: '束', 255: '龙', 256: '叶', 257: '幸', 258: '司', 259: '韶', 260: '郜',
             261: '黎', 262: '蓟', 263: '薄', 264: '印', 265: '宿', 266: '白', 267: '怀', 268: '蒲', 269: '邰', 270: '从',
             271: '鄂', 272: '索', 273: '咸', 274: '籍', 275: '赖', 276: '卓', 277: '蔺', 278: '屠', 279: '蒙', 280: '池',
             281: '乔', 282: '阴', 283: '鬱', 284: '胥', 285: '能', 286: '苍', 287: '双', 288: '闻', 289: '莘', 290: '党',
             291: '翟', 292: '谭', 293: '贡', 294: '劳', 295: '逄', 296: '姬', 297: '申', 298: '扶', 299: '堵', 300: '冉',
             301: '宰', 302: '郦', 303: '雍', 304: '郤', 305: '璩', 306: '桑', 307: '桂', 308: '濮', 309: '牛', 310: '寿',
             311: '通', 312: '边', 313: '扈', 314: '燕', 315: '冀', 316: '郏', 317: '浦', 318: '尚', 319: '农', 320: '温',
             321: '别', 322: '庄', 323: '晏', 324: '柴', 325: '瞿', 326: '阎', 327: '充', 328: '慕', 329: '连', 330: '茹',
             331: '习', 332: '宦', 333: '艾', 334: '鱼', 335: '容', 336: '向', 337: '古', 338: '易', 339: '慎', 340: '戈',
             341: '廖', 342: '庾', 343: '终', 344: '暨', 345: '居', 346: '衡', 347: '步', 348: '都', 349: '耿', 350: '满',
             351: '弘', 352: '匡', 353: '国', 354: '文', 355: '寇', 356: '广', 357: '禄', 358: '阙', 359: '东', 360: '欧',
             361: '殳', 362: '沃', 363: '利', 364: '蔚', 365: '越', 366: '夔', 367: '隆', 368: '师', 369: '巩', 370: '厍',
             371: '聂', 372: '晁', 373: '勾', 374: '敖', 375: '融', 376: '冷', 377: '訾', 378: '辛', 379: '阚', 380: '那',
             381: '简', 382: '饶', 383: '空', 384: '曾', 385: '毋', 386: '沙', 387: '乜', 388: '养', 389: '鞠', 390: '须',
             391: '丰', 392: '巢', 393: '关', 394: '蒯', 395: '相', 396: '查', 397: '后', 398: '荆', 399: '红', 400: '游',
             401: '竺', 402: '权', 403: '逯', 404: '盖', 405: '益', 406: '桓', 407: '公'}

city = ['北京市', '天津市', '沈阳市', '长春市', '哈尔滨市', '上海市', '南京市', '武汉市', '广州市', '重庆市', '成都市', '西安市']


# 生成手机号
def create_phone():
    # 第二位数
    second = [3, 4, 5, 7, 8, 9][random.randint(0, 5)]
    # 第三位数
    third = {
        3: random.randint(0, 9),
        4: [5, 7, 9][random.randint(0, 2)],
        5: [i for i in range(10) if i != 4][random.randint(0, 8)],
        7: [i for i in range(10) if i not in [4, 9]][random.randint(0, 7)],
        8: random.randint(0, 9),
        9: random.randint(0, 9)
    }[second]
    # 最后8位数
    suffix = random.randint(9999999, 100000000)
    # 拼接手机号
    return "1{}{}{}".format(second, third, suffix)


# 创造一个人，姓名，出生年月，城市，性别
def creat_people():
    people = {}
    nickname_len = random.randint(2, 3)
    if nickname_len == 3:
        nickname = dict_name[random.randint(0, 407)] + dict_name[random.randint(0, 407)] + dict_name[
            random.randint(0, 407)]
    else:
        nickname = dict_name[random.randint(0, 407)] + dict_name[random.randint(0, 407)]
    people['nickname'] = nickname
    people['sex'] = random.choice(['F', 'M'])
    people['birth_year'] = random.randint(1922, 2004)
    people['birth_month'] = random.randint(1, 12)
    people['birth_day'] = random.randint(1, 28)
    people['location'] = random.choice(city)
    people['phone'] = create_phone()
    return people


# print(creat_people())
# from user.models import User
#
# result = creat_people()
# User.objects.create(**result)
# 写入数据库
from user.models import User

for i in range(1000):
    result = creat_people()
    try:
        User.objects.create(**result)
    except Exception:
        pass
